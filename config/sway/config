# Read `man 5 sway` for a complete reference.

### Variables
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

set $term foot
set $menu wofi | xargs swaymsg exec --
set $lock swaylock -f
set $history clipman pick --tool="wofi" --max-items=30 --histpath="~/.local/share/clipman.json"

# set primary gruvbox colorscheme colors
set $bg #282828
set $fg #ebdbb2
set $red #cc241d
set $green #98971a
set $yellow #d79921
set $blue #458588
set $purple #b16286
set $aqua #689d68
set $gray #a89984
set $darkgray #1d2021

include /etc/sway/config-vars.d/*

# font used by sway for titles and bars
font pango:Hack 9

### Output configuration
output * bg ${HOME}/pictures/nasa-CpHNKNRwXps-unsplash.jpg fill

# You can get the names of your outputs by running: swaymsg -t get_outputs
# Rely on Kanshi
# output eDP-1 resolution 1920x1200 position 0,0

### Startup Programs
# Notification daemon
exec mako >/tmp/mako.log 2>&1

# Idle
exec swayidle -w \
    timeout 1200 '$lock' \
    timeout 1800 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
    before-sleep '$lock'

# Clipboard Manager
exec wl-paste -t text --watch clipman store --max-items=60 --histpath="~/.local/share/clipman.json"

# Network Manager Applet
exec nm-applet --indicator

# Screen Sharing
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

# Kanshi for display hotplug
exec_always kanshi >/tmp/kanshi.log 2>&1

### Input configuration
input "1739:52710:DLL0945:00_06CB:CDE6_Touchpad" {
    click_method clickfinger
    dwt enabled
    tap enabled
    tap_button_map lrm
    scroll_method two_finger
    natural_scroll enabled
    middle_emulation disabled
}

input "1739:0:Synaptics_TM3418-002" {
    click_method clickfinger
    dwt enabled
    tap enabled
    tap_button_map lrm
    scroll_method two_finger
    natural_scroll enabled
    middle_emulation disabled
}

input "type:keyboard" {
    xkb_options ctrl:nocaps
}

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
## Basics:
# change volume or toggle mute
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && pkill -RTMIN+10 i3blocks
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && pkill -RTMIN+10 i3blocks
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && pkill -RTMIN+10 i3blocks

# Brightness
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set +5%

# Screenshots
# Fullscreen
bindsym Print exec grimshot --notify save screen "${HOME}/screenshots/$(date +'%Y-%m-%d_%H:%M:%S%Z.png')"
# With selection
bindsym $mod+Print exec grimshot --notify save area "${HOME}/screenshots/$(date +'%Y-%m-%d_%H:%M:%S%Z.png')"
# Current Window
bindsym Shift+Print exec grimshot --notify save active "${HOME}/screenshots/$(date +'%Y-%m-%d_%H:%M:%S%Z.png')"

# Media
bindsym XF86AudioPlay exec playerctl play-pause

# Lock Screen
bindsym $mod+Control+l exec $lock

# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+d exec $menu

# View clipboard history
bindsym $mod+p exec $history

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

## Moving around:
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

## Workspaces:
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

# Move workspaces between monitors
bindsym $mod+Control+Shift+Right move workspace to output right
bindsym $mod+Control+Shift+Left move workspace to output left
bindsym $mod+Control+Shift+Down move workspace to output down
bindsym $mod+Control+Shift+Up move workspace to output up

## Layout stuff:
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

## Scratchpad:
# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

## Resizing containers:
bindsym $mod+r mode "resize"
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

## Notifications
bindsym $mod+n mode notifications
mode notifications {
    bindsym Escape mode default
    bindsym Return exec makoctl invoke; exec makoctl dismiss; mode default
    bindsym d exec makoctl dismiss; mode default
    bindsym Shift+d exec makoctl dismiss -a; mode default
}

## Window settings
for_window [class="^Steam$"] floating enable
for_window [class="^Code" title="Visual Studio Code"] layout tabbed
for_window [app_id="^firefox$"] layout tabbed
for_window [app_id="firefox" title="Picture-in-Picture"] {
    floating enable
    sticky enable
}


# Status Bar:
bar {
    swaybar_command waybar
}

# gruvbox
# class                 border|backgr|text|indicator|child_border
client.focused          $blue $blue $darkgray $blue $bg
client.focused_inactive $bg $bg $yellow $blue $bg
client.unfocused        $bg $bg $yellow $blue $bg
client.urgent           $red $red $fg $red $red

include /etc/sway/config.d/*
